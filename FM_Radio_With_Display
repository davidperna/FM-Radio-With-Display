#include <Wire.h>

unsigned char frequencyH = 0;
unsigned char frequencyL = 0;

unsigned int frequencyB;
double frequency = 0;

boolean iNumberToSegments[10][8] = { {1,1,1,1,1,1,0,0},
                                       {0,1,1,0,0,0,0,0},
                                       {1,1,0,1,1,0,1,0}, 
                                       {1,1,1,1,0,0,1,0}, 
                                       {0,1,1,0,0,1,1,0}, 
                                       {1,0,1,1,0,1,1,0}, 
                                       {1,0,1,1,1,1,1,0}, 
                                       {1,1,1,0,0,0,0,0},
                                       {1,1,1,1,1,1,1,0}, 
                                       {1,1,1,1,0,1,1,0}  };
  /*
    0 = a
    1 = b
    2 = c
    3 = d
    4 = e
    5 = f
    6 = g
    7 = dp
  */
  
  int iDigit[] = {0, 0, 0, 0};
  int iSegmentPins[] = {2,3,4,5,6,7,8};
  
  int latchPin = 10;
  int clockPin = 12;
  int dataPin = 11;
 
  byte AnodePins[] = {127,191,223,239};

void setup()
{
  Wire.begin();
  frequency = 93.0; //starting frequency
  setFrequency();
  Serial.begin(9600);
  
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
}

void loop()
{
  int reading = analogRead(0);
  //frequency = map((float)reading, 0.0, 1024.0, 87.5, 108.0);
 
  frequency = ((double)reading * (108.0 - 87.5)) / 1024.0 + 87.5;
  frequency = ((int)(frequency * 10)) / 10.0;
 
  setFrequency();
  Serial.print(frequency);
  
  Serial.print("  ");
  frequency = round(frequency * 10) / 10.0;
  Serial.print(frequency);
  
  frequency *= 10;
  iDigit[0] = (int)frequency % 10;
  frequency /= 10;
  iDigit[1] = (int)frequency % 10;
  frequency /= 10;
  iDigit[2] = (int)frequency % 10;
  frequency /= 10;
  iDigit[3] = (int)frequency % 10;
  
  Serial.print("  ");
  Serial.print(iDigit[3]);
  Serial.print("  ");
  Serial.print(iDigit[2]);
  Serial.print("  ");
  Serial.print(iDigit[1]);
  Serial.print("  ");
  Serial.println(iDigit[0]);
   
  PrintDigit();
}

void setFrequency()
{
  frequencyB = 4 * (frequency * 1000000 + 225000) / 32768;
  frequencyH = frequencyB >> 8;
  frequencyL = frequencyB & 0XFF;
  //delay(100);
  Wire.beginTransmission(0x60);
  Wire.write(frequencyH);
  Wire.write(frequencyL);
  Wire.write(0xB0);
  Wire.write(0x10);
  Wire.write((byte)0x00);
  Wire.endTransmission();
  //delay(100); 
}
void PrintDigit(){ 
  for(int iLoop = 0; iLoop < 100; iLoop ++){
  for(int iDigits = 0; iDigits < 4; iDigits ++){
    for(int iPrint = 0; iPrint < 8; iPrint++){
      if(iNumberToSegments[iDigit[iDigits]][iPrint]){
        digitalWrite(iPrint + 2, LOW);
      }
      else digitalWrite(iSegmentPins[iPrint], HIGH);  
    }

    digitalWrite(iDigits + 9,LOW);
    delayMicroseconds(100);
    digitalWrite(9, HIGH);
    digitalWrite(10, HIGH);
    digitalWrite(11, HIGH);
    digitalWrite(12, HIGH);
  }
  }
}
